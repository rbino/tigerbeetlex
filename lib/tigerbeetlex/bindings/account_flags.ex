#######################################################
# This file was auto-generated by elixir_bindings.zig #
#              Do not manually modify.                #
#######################################################

defmodule TigerBeetlex.AccountFlags do
  import Bitwise

  @moduledoc """
  See [AccountFlags](https://docs.tigerbeetle.com/reference/account#flags).
  """

  @doc """
  See [linked](https://docs.tigerbeetle.com/reference/account#flagslinked).
  """
  def linked(current \\ 0) do
    current ||| 1 <<< 0
  end

  @doc """
  See [debits_must_not_exceed_credits](https://docs.tigerbeetle.com/reference/account#flagsdebits_must_not_exceed_credits).
  """
  def debits_must_not_exceed_credits(current \\ 0) do
    current ||| 1 <<< 1
  end

  @doc """
  See [credits_must_not_exceed_debits](https://docs.tigerbeetle.com/reference/account#flagscredits_must_not_exceed_debits).
  """
  def credits_must_not_exceed_debits(current \\ 0) do
    current ||| 1 <<< 2
  end

  @doc """
  See [history](https://docs.tigerbeetle.com/reference/account#flagshistory).
  """
  def history(current \\ 0) do
    current ||| 1 <<< 3
  end

  @doc """
  Given an integer flags value, returns a list of atoms indicating which flags are set.
  """
  def int_to_flags(int_value) when is_integer(int_value) do
    flags = []

    flags =
      if (int_value &&& linked()) != 0 do
        [:linked | flags]
      else
        flags
      end

    flags =
      if (int_value &&& debits_must_not_exceed_credits()) != 0 do
        [:debits_must_not_exceed_credits | flags]
      else
        flags
      end

    flags =
      if (int_value &&& credits_must_not_exceed_debits()) != 0 do
        [:credits_must_not_exceed_debits | flags]
      else
        flags
      end

    flags =
      if (int_value &&& history()) != 0 do
        [:history | flags]
      else
        flags
      end

    Enum.reverse(flags)
  end
end
